<%= form_for @occurrence, html: { multipart: true, id: 'occurrence_form' } do |f| %>
  <div class="new-form-wrapper col-12 col-xl-8">

    <% if @occurrence.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(@occurrence.errors.count, "error") %> evitou que a ocorrência fosse salva:</h2>

        <ul>
        <% @occurrence.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
        </ul>
      </div>
    <% end %>
    <div class="basic-desc-wrapper col-12">
      <div class="basic-form-wrapper col-12 col-md-6">
        <div class="basic-item form-group">

          <span>Tipo da ocorrência:</span><br>
          <%= f.radio_button :occurrence_type, false, :checked => true %> Perdido
          <%= f.radio_button :occurrence_type, true %> Encontrado
        </div>
        <div class="basic-item form-group">
          <span>Quando:</span><br>
          <% m_names = [ "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho",
                "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" ] %>
          <%= f.date_field :date, width: '200', class: 'form-control' %>

          <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
          <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
          <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
        </div>
        <div class="basic-item form-group" style="display: flex; flex-direction: row;">
          <div class="basic-inline col-4">
            <span>Tipo de animal:</span><br>
            <%= f.select :animal_type, ['Cachorro', 'Gato', 'Outro'], class: 'form-control' %>
          </div>
          <div class="basic-inline col-4">
            <span>Cor:</span><br>
            <%= f.text_field :animal_color, class: 'form-control' %>
          </div>
          <div class="basic-inline col-4">
            <span>Tamanho:</span><br>
            <%= f.text_field :animal_size, class: 'form-control' %>
          </div>
        </div>
        <div class="basic-item form-group">
          <span>Upload de fotos ou imagens:</span><br>
          <form action="/media-upload" class="dropzone">
            <div class="fallback">
              <input name="file" type="file" class="form-control" />
            </div>
          </form>
          <%#= file_field_tag 'Imagens', multiple: true, accept: "image/jpeg, image/jpg, image/gif, image/png" %>
        </div>
      </div>
      <div class="form-group col-12 col-md-6">
        <span>Descrição:</span><br>
        <%= f.text_field :description, class: 'description-input form-control' %>
      </div>
    </div>
    <div class="map-form form-group col-12 col-md-6">
      <span>Local da ocorrência:</span><br>

      <div class="pac-card" id="pac-card">
      <div>

      </div>
      <div id="pac-container">
        <input id="pac-input" type="text"
            placeholder="Digite o endereço">
      </div>
    </div>
    <div id="map"></div>
    <div id="infowindow-content">
      <img src="" width="16" height="16" id="place-icon">
      <span id="place-name"  class="title"></span><br>
      <span id="place-address"></span>
    </div>
    <div style="display: none;">
      <%= f.text_field :location_lat, :id => 'latitude_field' %><br>
      <%= f.text_field :location_lon, :id => 'longitude_field' %><br>
      <%= f.text_field :location_string, :id => 'address_field' %><br>
    </div>

    <script>
      var initialLatlng = {lat: -25.44577578, lng: -49.28638345};

      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var initialLatlng = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          }
        });
      }

      function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: initialLatlng,
          zoom: 14,
          zoomControl: true,
          mapTypeControl: false,
          scaleControl: false,
          streetViewControl: false,
          rotateControl: false,
          fullscreenControl: false
        });
        var card = document.getElementById('pac-card');
        var input = document.getElementById('pac-input');
        var types = document.getElementById('type-selector');
        var strictBounds = document.getElementById('strict-bounds-selector');

        map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

        var autocomplete = new google.maps.places.Autocomplete(input);

        // Bind the map's bounds (viewport) property to the autocomplete object,
        // so that the autocomplete requests use the current map bounds for the
        // bounds option in the request.
        autocomplete.bindTo('bounds', map);

        // Set the data fields to return when the user selects a place.
        autocomplete.setFields(
            ['address_components', 'geometry', 'icon', 'name']);

        var infowindow = new google.maps.InfoWindow();
        var infowindowContent = document.getElementById('infowindow-content');
        infowindow.setContent(infowindowContent);
        var marker = new google.maps.Marker({
          map: map,
          anchorPoint: new google.maps.Point(0, -29)
        });

        autocomplete.addListener('place_changed', function() {
          infowindow.close();
          marker.setVisible(false);
          var place = autocomplete.getPlace();
          if (!place.geometry) {
            // User entered the name of a Place that was not suggested and
            // pressed the Enter key, or the Place Details request failed.
            window.alert("No details available for input: '" + place.name + "'");
            return;
          }

          // If the place has a geometry, then present it on a map.
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);  // Why 17? Because it looks good.
          }
          marker.setPosition(place.geometry.location);
          marker.setVisible(true);

          document.getElementById('latitude_field').value = marker.position.lat();
          document.getElementById('longitude_field').value = marker.position.lng();
          var address = '';
          if (place.address_components) {
            address = [
              (place.address_components[0] && place.address_components[0].short_name || ''),
              (place.address_components[1] && place.address_components[1].short_name || ''),
              (place.address_components[2] && place.address_components[2].short_name || '')
            ].join(' ');
          }

          infowindowContent.children['place-icon'].src = place.icon;
          infowindowContent.children['place-name'].textContent = place.name;
          infowindowContent.children['place-address'].textContent = address;
          document.getElementById('address_field').value = address;

          infowindow.open(map, marker);
        });

      }

      </script>
      <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDz2C0M-vYOwk-g2tn2D-OK_N29i8CqQ0M&callback=initMap&libraries=places"
      async defer></script>
    </div>
    <div class="actions">
      <%= f.submit "Salvar ocorrência", class: 'btn btn-info btn-salvar' %>
    </div>
  </div>
<% end %>

<style type="text/css">
  .new-form-wrapper {
    height: 70vh;
    border: 1px solid #17a2b8;
    border-radius: 3px;
    padding: 20px;
    overflow-y: scroll;
    position: relative;
    align-items: center;
    text-align: center;
  }
  .form-group {
    display: inline-block;
  }
  .basic-desc-wrapper {
    justify-content: space-evenly;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
  }
  .basic-form-wrapper {
    position: relative;
    display: flex;
    flex-direction: column;
  }
  .description-input {
    height: 200px;
    width: 100%;
    font-size: 11px;
  }





  .map-form {
    position: relative;
    height:300px;
  }
  #map {
    height: 100%;
  }

  #description {
    font-family: Roboto;
    font-size: 15px;
    font-weight: 300;
  }

  #infowindow-content .title {
    font-weight: bold;
  }

  #infowindow-content {
    display: none;
  }

  #map #infowindow-content {
    display: inline;
  }

  .pac-card {
    margin: 10px 10px 0 0;
    border-radius: 2px 0 0 2px;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    outline: none;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
    background-color: #fff;
    font-family: Roboto;
  }

  #pac-container {
    padding-bottom: 6px;
    margin-right: 6px;
  }

  .pac-controls {
    display: inline-block;
    padding: 5px 11px;
  }

  .pac-controls label {
    font-family: Roboto;
    font-size: 13px;
    font-weight: 300;
  }

  #pac-input {
    background-color: #fff;
    font-family: Roboto;
    font-size: 15px;
    font-weight: 300;
    margin-left: 6px;
    margin-top: 6px;
    padding: 0 11px 0 13px;
    text-overflow: ellipsis;
    width: 400px;
  }

  #pac-input:focus {
    border-color: #4d90fe;
  }
  #title {
    color: #fff;
    background-color: #4d90fe;
    font-size: 25px;
    font-weight: 500;
    padding: 6px 12px;
  }
  #target {
    width: 345px;
  }
  .btn-salvar {
    margin: 20px;
  }

</style>